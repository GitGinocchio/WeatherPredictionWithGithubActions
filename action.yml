name: 'Collect Weather Data'
description: 'Collect Weather Data using wttr.in and store it in branch'
branding:
  icon: "activity"
  color: "green"
inputs:
  author_name:
    description: "The name of the committer"
    required: false
    default: "GitHub Actions"
  author_email:
    description: "The email address of the committer"
    required: false
    default: "41898282+github-actions[bot]@users.noreply.github.com"
  commit_message:
    description: "The commit message to use for the commit"
    required: false
    default: "data: Collecting New Weather Data"
  cities:
    description: "List of city names, each city must be separated by a newline"
    required: true
  branch_name:
    description: "The name of the branch to store the data in"
    required: true
    default: data

runs:
  using: "composite"
  steps:
    - name: Checkout Main Branch
      uses: actions/checkout@v3
      with:
        ref: main

    - name: Checkout or Create Data Branch
      id: checkout_or_create
      shell: bash
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

        # Controlla se il branch esiste
        if git ls-remote --exit-code --heads origin "${{ inputs.branch_name }}"; then
          echo "Branch ${{ inputs.branch_name }} already exists."
          git checkout ${{ inputs.branch_name }}
          echo "branch_created=false" >> $GITHUB_ENV
        else
          echo "Creating a new branch ${{ inputs.branch_name }}."
          git checkout --orphan ${{ inputs.branch_name }}
          echo -e "# Ignore everything\n*\n# Except this file\n!.gitignore" > .gitignore
          git add .gitignore
          git commit -m "Initial commit with .gitignore"
          git push origin ${{ inputs.branch_name }}
          echo "branch_created=true" >> $GITHUB_ENV
        fi

    - name: Clean Newly Created Branch
      if: env.branch_created == 'true'
      shell: bash
      run: |
        cd data

        find . -type f ! -name '.gitignore' -delete
        find . -type d -empty -delete # Rimuove eventuali cartelle vuote

        git add .

        if git diff-index --quiet HEAD --; then
            echo "Nessuna modifica rilevata."
        else
            git commit -m "Cleanup branch, mantenendo solo .gitignore"
            git push origin ${{ inputs.branch_name }}
        fi

    - name: Checkout Data Branch if Exists
      if: env.branch_created == 'false'
      uses: actions/checkout@v3
      with:
        ref: ${{ inputs.branch_name }}
        path: data

    - name: Setup Python
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    
    - name: Install Python dependencies
      shell: bash
      run: python -m pip install -r ${{ github.action_path }}/action-requirements.txt
    
    - name: Collect Weather Data
      id: "collect-weather-data"
      shell: bash
      env:
        CITIES: ${{ inputs.cities }}
      run: |
        UPDATE=$(python src/collect_weather_data.py
        ) || exit 1
        echo "markdown=$(echo $UPDATE)" >> $GITHUB_OUTPUT
    
    - name: Commit Changes
      shell: bash
      run: |
        git config --global user.name 'github-actions[bot]'
        git config --global user.email 'github-actions[bot]@users.noreply.github.com'

        git add .

        if git diff-index --quiet HEAD --; then
            echo "Nessun cambiamento rilevato, niente da aggiornare."
        else
            git commit -m "${{ inputs.commit_message }}"
            git push origin ${{ inputs.branch_name }}
        fi
      working-directory: data